Flask
create
1.
fetch('/create', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
    },
    body: 'name=Staszek&surname=Bartycki&job=it',
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));
2.
fetch('/create', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
    },
    body: 'name=Staszek&surname=Barycki&job=it',
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));
3.
fetch('/create', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
    },
    body: 'name=Staszek&surname=golec&job=it',
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));

Update
fetch('/update/1', {
    method: 'PUT',
    headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
    },
    body: 'name=Grzegorz',
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));

Delate
delete

fetch('/delete/2', {
    method: 'DELETE',
    headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
    },
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));



Spring

http://localhost:8080/hello?name=Staszek
1.
fetch('http://localhost:8080/create', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
    },
    body: 'name=Staszek&surname=golec&job=it',
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));

delete

fetch('http://localhost:8080/delete/2', {
    method: 'DELETE',
    headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
    },
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));

Update

fetch('http://localhost:8080/update/1', {
    method: 'PUT',
    headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
    },
    body: 'name=Staszek&surname=Bartycki&job=it',
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));
Express
 create 
fetch('http://localhost:3000/create', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
    },
    body: 'name=Staszek&surname=Golec&job=it',
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));

Update 
fetch('http://localhost:2137/person/1', {
    method: 'PUT',
    headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
    },
    body: 'name=MikoÅ‚aj&surname=Golec&job=it',
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));
Delete

fetch('http://localhost:3000/person/1', {
    method: 'DELETE',
    headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
    },
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));